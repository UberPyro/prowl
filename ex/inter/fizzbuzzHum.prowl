vl fizzbuzzHum = mod

  vl rules = Tbl:{
    3 -> "fizz",
    5 -> "buzz",
    7 -> "bizz"
  }

  pub fn rules fizzbuzz = let
    fn isDiv = rem (==0)
    fn (m, s) n getDivList = n m isDiv <zap s> map
    fn n numOrWord = <empty> <> <n to (str) cons> either
    fn n fizzbuzzOfN = rules <n getDivList> filterMap numOrWord fold
  in (1..) <fizzbuzzOfN> map

  pub fn main =
    argv 1 get
    to (i32)
    fizzbuzz cons

end
