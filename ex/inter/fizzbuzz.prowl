vl fizzbuzz = mod

  vl rules = Tbl:{
    3 -> "fizz",
    5 -> "buzz",
    7 -> "bizz"
  }

  pub fn n rules fizzbuzz = let
    fn n m isDiv = n m rem (== 0)             /; n is divisible by m ;/
    fn m divList = rules <m isDiv> filter     /; list of rules that apply ;/
    fn m wordList = m divList <{              /; just fizz, buzz; no numbers ;/
      (_, y) -> y
    }> map
    fn m appendedList = m divList fold        /; join all the words together ;/
    fn m adjustedList = m appendedList <{     /; replace empty strings with number ;/
      "" -> m to (str),
      s -> s
    }> map
  in (1..n) <adjustedList> map                /; map on every number ;/

  pub fn main = 100 rules fizzbuzz cons

end
